type Item {
    id: ID!
    name: String
	metadata: String
    barcode: String
	pathParts: [PathPart!]!
    pictures: ItemPicturesConnection!
}

type ItemsConnection {
    items: [Item!]!
}

type ItemPicturesConnection {
    edges: [PictureEdge]
}

enum ItemStatus {
    All
    InUse
    NotInUse
}

input Items {
    barcode: String
    searchWord: String
    containerId: ID
    status: ItemStatus
}

input CreateItem {
    name: String
    barcode: String
    containerId: String
}

type CreateItemResponse {
    error: Error
    item: Item
}

input PlaceItemToContainer {
    containerId: ID!
    itemId: ID!
}

type PlaceItemToContainerResponse {
    container: Container
	item: Item
	previousContainer: Container
}

input ArchiveItem {
    itemId: ID!
}

type ArchiveItemResponse {
    error: Error
}

input UpdateItem {
	itemId: ID!
	containerId: ID
	name: String
	metadata: String
}

type UpdateItemResponse {
	item: Item!
}